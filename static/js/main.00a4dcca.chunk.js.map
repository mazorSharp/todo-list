{"version":3,"sources":["components/Form.js","components/ToDo.js","components/ToDoList.js","App.js","index.js"],"names":["Form","setInputText","inputText","setToDos","toDos","setStatus","className","type","placeholder","value","onChange","e","target","onClick","preventDefault","text","completed","id","Math","random","ToDo","todo","useState","todoEditing","setTodoEditing","editingText","setEditingText","map","element","filter","updatedTodos","editTodo","ToDoList","filteredToDos","App","status","setFilteredToDos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00a4dcca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({ setInputText, inputText, setToDos, toDos, setStatus }) => {\r\n    \r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setToDos([\r\n            ...toDos,\r\n            { text: inputText, completed: false, id: Math.random() * 1000}\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <form>\r\n        <div className=\"form\">\r\n            <input \r\n                type=\"text\" \r\n                className=\"todo-input\"\r\n                placeholder=\"enter to do item\" \r\n                value={inputText}\r\n                onChange={inputTextHandler}\r\n\r\n            />\r\n            <button onClick={submitHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus\"></i>            \r\n            </button>    \r\n            <select className=\"todos-filter\" onChange={statusHandler}>\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n\r\n        </div>            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, {useState} from 'react'\r\n\r\nconst ToDo = ({ text, setToDos, toDos, todo }) => {\r\n\r\n    const [ todoEditing, setTodoEditing ] = useState(null);\r\n    const [editingText, setEditingText ] = useState(\"\"); \r\n\r\n    const deleteHandler = () => {\r\n        setToDos(toDos.filter((element) => ( element.id !== todo.id)))\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setToDos(toDos.map((element) => {\r\n            if (todo.id === element.id) {\r\n                return {\r\n                    ...element, completed: !element.completed,\r\n                };\r\n            }\r\n            return element;\r\n        }))\r\n    }\r\n    //edit handler maybe\r\n\r\n    function editTodo(id) {\r\n        const updatedTodos = [...toDos].map((todo) => {\r\n            if (todo.id === id) {\r\n                todo.text = editingText\r\n            }\r\n            return todo;\r\n        })\r\n        setToDos(updatedTodos);\r\n        setTodoEditing(null);\r\n        setEditingText(\"\");\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n\r\n        {todoEditing === todo.id ? (\r\n            <input \r\n                type=\"text\" \r\n                onChange={(e) => setEditingText(e.target.value)} \r\n                value={editingText} \r\n            />) : (\"\") }\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"uncompleted\"}`}>{ text }</li>\r\n            <section className=\"all-btns\">\r\n                <button className=\"complete-btn\" onClick={completeHandler}>\r\n                    <i className=\"fas fa-check\"></i>\r\n                </button>\r\n                <button className=\"trash-btn\" onClick={deleteHandler}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>                        \r\n                {todoEditing === todo.id ? (\r\n                    <button className=\"edit-btn-active\" onClick={() => editTodo(todo.id)}>\r\n                        <i className=\"fas fa-edit\"></i>\r\n                    </button>\r\n                        ) : (\r\n                        <button className=\"edit-btn\" onClick={(e) => setTodoEditing(todo.id)}>\r\n                            <i className=\"fas fa-edit\"></i>            \r\n                        </button>)\r\n                }                \r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo\r\n","import React from 'react';\r\nimport ToDo from './ToDo';\r\n\r\nconst ToDoList = ({ toDos, setToDos, filteredToDos }) => {\r\n    return (\r\n        <div className=\"container-div\">\r\n            {filteredToDos.map((todo) => (\r\n                <ToDo \r\n                    text={todo.text} \r\n                    key={todo.id} \r\n                    setToDos={setToDos} \r\n                    toDos={toDos} \r\n                    todo={todo}                        \r\n                /> \r\n            ))}            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [toDos, setToDos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredToDos, setFilteredToDos] = useState([]);\n\n\n  // useEffects\n   useEffect(() => {\n    getLocalTodos();  \n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [toDos, status]); \n\n\n  //filter to-dos to match their status ie: all, complete, uncomplete\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredToDos(toDos.filter((todo) => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredToDos(toDos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredToDos(toDos);\n    }\n  };\n  \n\n  // save locally\n  \n  const saveLocalTodos = () => {\n      localStorage.setItem(\"toDos\", JSON.stringify(toDos));   \n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"toDos\") === null ) {\n      localStorage.setItem(\"toDos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"toDos\"));\n      setToDos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <header>\n          <h1>To-Do List</h1>      \n        </header>    \n        <Form \n          toDos={toDos} \n          setToDos={setToDos} \n          inputText={inputText} \n          setInputText={setInputText} \n          setStatus={setStatus}\n        />\n        <ToDoList \n          toDos={toDos} \n          setToDos={setToDos} \n          status={status}\n          filteredToDos={filteredToDos}\n        />      \n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}